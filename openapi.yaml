openapi: 3.1.0
info:
  title: Burger Restaurant API
  description: An API for managing burgers at a restaurant.
  version: 1.0.0
servers:
  - url: https://example.com
    description: The production server.
tags:
  - name: burgers
    description: Operations for managing burgers.
  - name: orders
    description: Operations for managing orders.
x-speakeasy-retries:
  strategy: backoff
  backoff:
    initialInterval: 500
    maxInterval: 60000
    maxElapsedTime: 3600000
    exponent: 1.5
  statusCodes:
    - 5XX
  retryConnectionErrors: true
paths:
  /burgers:
    post:
      operationId: createBurger
      summary: Create a new burger
      description: Creates a new burger in the database.
      tags:
        - burgers
      requestBody:
        description: The burger to create.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BurgerCreate"
      responses:
        "201":
          description: The burger was created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Burger"
    get:
      operationId: listBurgers
      summary: List burgers
      tags:
        - burgers
      description: Lists all burgers in the database.
      responses:
        "200":
          description: The burgers were retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Burger"
  "/burgers/{id}":
    get:
      operationId: getBurger
      summary: Get a burger
      tags:
        - burgers
      description: Gets a burger from the database.
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 500
          maxInterval: 60000
          maxElapsedTime: 3600000
          exponent: 1.5
        statusCodes:
          - 5XX
        retryConnectionErrors: true
      parameters:
        - in: path
          name: id
          schema:
            $ref: "#/components/schemas/BurgerId"
          required: true
      responses:
        "200":
          description: The burger was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Burger"
    patch:
      operationId: updateBurger
      summary: Update a burger
      tags:
        - burgers
      description: Updates a burger in the database.
      parameters:
        - in: path
          name: id
          schema:
            $ref: "#/components/schemas/BurgerId"
          required: true
      requestBody:
        description: The burger to update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BurgerUpdate"
      responses:
        "200":
          description: The burger was updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Burger"
    delete:
      operationId: deleteBurger
      summary: Delete a burger
      tags:
        - burgers
      description: Deletes a burger from the database.
      parameters:
        - in: path
          name: id
          schema:
            $ref: "#/components/schemas/BurgerId"
          required: true
      responses:
        "204":
          description: The burger was deleted successfully.
  /orders:
    post:
      operationId: createOrder
      summary: Create a new order
      description: Creates a new order in the database.
      tags:
        - orders
      requestBody:
        description: The order to create.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreate"
      responses:
        "201":
          description: The order was created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/OrderId"
                  burger_ids:
                    type: array
                    items:
                      $ref: "#/components/schemas/BurgerId"
                    minItems: 1
                    description: The burgers in the order.
                    example:
                      &a1
                      - 1
                      - 2
                  time:
                    type: string
                    format: date-time
                    description: The time the order was placed.
                    example: 2021-01-01T00:00:00.000Z
                  table:
                    type: number
                    minimum: 1
                    description: The table the order is for.
                    example: 1
                  status:
                    type: string
                    enum:
                      &a2
                      - pending
                      - in_progress
                      - ready
                      - delivered
                    description: The status of the order.
                    example: pending
                  note:
                    type: string
                    description: A note for the order.
                    example: No onions.
                required:
                  - id
                  - burger_ids
                  - time
                  - table
                  - status
    get:
      operationId: listOrders
      summary: List orders
      tags:
        - orders
      description: Lists all orders in the database.
      responses:
        "200":
          description: The orders were retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      $ref: "#/components/schemas/OrderId"
                    burger_ids:
                      type: array
                      items:
                        $ref: "#/components/schemas/BurgerId"
                      minItems: 1
                      description: The burgers in the order.
                      example: *a1
                    time:
                      type: string
                      format: date-time
                      description: The time the order was placed.
                      example: 2021-01-01T00:00:00.000Z
                    table:
                      type: number
                      minimum: 1
                      description: The table the order is for.
                      example: 1
                    status:
                      type: string
                      enum: *a2
                      description: The status of the order.
                      example: pending
                    note:
                      type: string
                      description: A note for the order.
                      example: No onions.
                  required:
                    - id
                    - burger_ids
                    - time
                    - table
                    - status
  "/orders/{id}":
    get:
      operationId: getOrder
      summary: Get an order
      tags:
        - orders
      description: Gets an order from the database.
      parameters:
        - in: path
          name: id
          schema:
            $ref: "#/components/schemas/OrderId"
          required: true
      responses:
        "200":
          description: The order was retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/OrderId"
                  burger_ids:
                    type: array
                    items:
                      $ref: "#/components/schemas/BurgerId"
                    minItems: 1
                    description: The burgers in the order.
                    example: *a1
                  time:
                    type: string
                    format: date-time
                    description: The time the order was placed.
                    example: 2021-01-01T00:00:00.000Z
                  table:
                    type: number
                    minimum: 1
                    description: The table the order is for.
                    example: 1
                  status:
                    type: string
                    enum: *a2
                    description: The status of the order.
                    example: pending
                  note:
                    type: string
                    description: A note for the order.
                    example: No onions.
                required:
                  - id
                  - burger_ids
                  - time
                  - table
                  - status
    patch:
      operationId: updateOrder
      summary: Update an order
      tags:
        - orders
      description: Updates an order in the database.
      parameters:
        - in: path
          name: id
          schema:
            $ref: "#/components/schemas/OrderId"
          required: true
      requestBody:
        description: The order to update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderUpdate"
      responses:
        "200":
          description: The order was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/OrderId"
                  burger_ids:
                    type: array
                    items:
                      $ref: "#/components/schemas/BurgerId"
                    minItems: 1
                    description: The burgers in the order.
                    example: *a1
                  time:
                    type: string
                    format: date-time
                    description: The time the order was placed.
                    example: 2021-01-01T00:00:00.000Z
                  table:
                    type: number
                    minimum: 1
                    description: The table the order is for.
                    example: 1
                  status:
                    type: string
                    enum: *a2
                    description: The status of the order.
                    example: pending
                  note:
                    type: string
                    description: A note for the order.
                    example: No onions.
                required:
                  - id
                  - burger_ids
                  - time
                  - table
                  - status
    delete:
      operationId: deleteOrder
      summary: Delete an order
      tags:
        - orders
      description: Deletes an order from the database.
      parameters:
        - in: path
          name: id
          schema:
            $ref: "#/components/schemas/OrderId"
          required: true
      responses:
        "204":
          description: The order was deleted successfully.
webhooks:
  /burgers:
    post:
      operationId: createBurgerWebhook
      summary: New burger webhook
      tags:
        - burgers
      description: A webhook that is called when a new burger is created.
      requestBody:
        description: The burger that was created.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Burger"
      responses:
        "200":
          description: The webhook was processed successfully.
  /orders:
    post:
      operationId: createOrderWebhook
      summary: New order webhook
      tags:
        - orders
      description: A webhook that is called when a new order is created.
      requestBody:
        description: The order that was created.
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: "#/components/schemas/OrderId"
                burger_ids:
                  type: array
                  items:
                    $ref: "#/components/schemas/BurgerId"
                  minItems: 1
                  description: The burgers in the order.
                  example: *a1
                time:
                  type: string
                  format: date-time
                  description: The time the order was placed.
                  example: 2021-01-01T00:00:00.000Z
                table:
                  type: number
                  minimum: 1
                  description: The table the order is for.
                  example: 1
                status:
                  type: string
                  enum: *a2
                  description: The status of the order.
                  example: pending
                note:
                  type: string
                  description: A note for the order.
                  example: No onions.
              required:
                - id
                - burger_ids
                - time
                - table
                - status
      responses:
        "200":
          description: The webhook was processed successfully.
  "/orders/{id}":
    patch:
      operationId: orderStatusChangeWebhook
      summary: Order status change webhook
      tags:
        - orders
      description: A webhook that is called when an order's status changes.
      requestBody:
        description: The order that was updated.
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: "#/components/schemas/OrderId"
                burger_ids:
                  type: array
                  items:
                    $ref: "#/components/schemas/BurgerId"
                  minItems: 1
                  description: The burgers in the order.
                  example: *a1
                time:
                  type: string
                  format: date-time
                  description: The time the order was placed.
                  example: 2021-01-01T00:00:00.000Z
                table:
                  type: number
                  minimum: 1
                  description: The table the order is for.
                  example: 1
                status:
                  type: string
                  enum: *a2
                  description: The status of the order.
                  example: pending
                note:
                  type: string
                  description: A note for the order.
                  example: No onions.
              required:
                - id
                - burger_ids
                - time
                - table
                - status
      responses:
        "200":
          description: The webhook was processed successfully.
components:
  schemas:
    BurgerCreate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          description: The name of the burger.
          example: Veggie Burger
        description:
          type: string
          maxLength: 255
          description: The description of the burger.
          example: A delicious bean burger with avocado.
      required:
        - name
      description: A burger to create.
    Burger:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/BurgerId"
        name:
          type: string
          minLength: 1
          maxLength: 50
          description: The name of the burger.
          example: Veggie Burger
        description:
          type: string
          maxLength: 255
          description: The description of the burger.
          example: A delicious bean burger with avocado.
      required:
        - id
        - name
      description: A burger served at the restaurant.
    BurgerId:
      type: number
      minimum: 1
      description: The unique identifier of the burger.
      example: 1
    BurgerUpdate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          description: The name of the burger.
          example: Veggie Burger
        description:
          type: string
          maxLength: 255
          description: The description of the burger.
          example: A delicious bean burger with avocado.
      description: A burger to update.
    OrderCreate:
      type: object
      properties:
        burger_ids:
          type: array
          items:
            $ref: "#/components/schemas/BurgerId"
          minItems: 1
          description: The burgers in the order.
          example: *a1
        time:
          type: string
          format: date-time
          description: The time the order was placed.
          example: 2021-01-01T00:00:00.000Z
        table:
          type: number
          minimum: 1
          description: The table the order is for.
          example: 1
        status:
          type: string
          enum: *a2
          description: The status of the order.
          example: pending
        note:
          type: string
          description: A note for the order.
          example: No onions.
      required:
        - burger_ids
        - time
        - table
        - status
      description: An order to create.
    OrderId:
      type: number
      minimum: 1
      description: The unique identifier of the order.
      example: 1
    OrderUpdate:
      type: object
      properties:
        burger_ids:
          type: array
          items:
            $ref: "#/components/schemas/BurgerId"
          minItems: 1
          description: The burgers in the order.
          example: *a1
        time:
          type: string
          format: date-time
          description: The time the order was placed.
          example: 2021-01-01T00:00:00.000Z
        table:
          type: number
          minimum: 1
          description: The table the order is for.
          example: 1
        status:
          type: string
          enum: *a2
          description: The status of the order.
          example: pending
        note:
          type: string
          description: A note for the order.
          example: No onions.
      description: An order to update.

